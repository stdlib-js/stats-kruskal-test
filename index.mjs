// Copyright (c) 2022 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./index.d.ts" />
import s from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-collection@esm/index.mjs";import t from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-plain-object@esm/index.mjs";import e from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-define-read-only-property@esm/index.mjs";import i from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-count-by@esm/index.mjs";import r from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-keys@esm/index.mjs";import n from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-ranks@esm/index.mjs";import o from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-pow@esm/index.mjs";import a from"https://cdn.jsdelivr.net/gh/stdlib-js/stats-base-dists-chisquare-cdf@esm/index.mjs";import l from"https://cdn.jsdelivr.net/gh/stdlib-js/utils-identity-function@esm/index.mjs";import d from"https://cdn.jsdelivr.net/gh/stdlib-js/array-base-incrspace@esm/index.mjs";import p from"https://cdn.jsdelivr.net/gh/stdlib-js/string-format@esm/index.mjs";import m from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-array@esm/index.mjs";import h from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-number@esm/index.mjs";import u from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-nan@esm/index.mjs";import g from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-has-own-property@esm/index.mjs";import j from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-positive-integer@esm/index.mjs";import f from"https://cdn.jsdelivr.net/gh/stdlib-js/assert-is-boolean@esm/index.mjs";import c from"https://cdn.jsdelivr.net/gh/stdlib-js/math-base-special-roundn@esm/index.mjs";var v=m,b=h.isPrimitive,w=t,y=u,x=g,E=p;var V=function(s,t){return w(t)?x(t,"alpha")&&(s.alpha=t.alpha,!b(s.alpha)||y(s.alpha))?new TypeError(E("invalid option. `%s` option must be a number. Option: `%s`.","alpha",s.alpha)):x(t,"groups")&&(s.groups=t.groups,!v(s.groups))?new TypeError(E("invalid option. `%s` option must be an array. Option: `%s`.","groups",s.groups)):null:new TypeError(E("invalid argument. Options argument must be an object. Value: `%s`.",t))},T=j,k=t,O=f.isPrimitive,F=g,R=c,q=p;var M=s,P=t,D=e,K=i,N=r,S=n,W=o,z=a,A=l,B=d,C=p,G=V,H=function(s){var t,e,i;if(e=4,t=!0,arguments.length>0){if(!k(s))throw new TypeError(q("invalid argument. First argument must be an options object. Value: `%s`.",s));if(F(s,"digits")){if(!T(s.digits))throw new TypeError(q("invalid option. `%s` option must be a positive integer. Option: `%s`.","digits",s.digits));e=s.digits}if(F(s,"decision")){if(!O(s.decision))throw new TypeError(q("invalid option. `%s` option must be a boolean. Option: `%s`.","decision",s.decision));t=s.decision}}return i="",i+=this.method,i+="\n\n",i+="Null hypothesis: the medians of all groups are the same",i+="\n\n",i+="    pValue: "+R(this.pValue,-e)+"\n",i+="    statistic: "+R(this.statistic,-e),i+="    df: "+this.df,i+="\n\n",t&&(i+="Test Decision: ",this.rejected?i+="Reject null in favor of alternative at "+100*this.alpha+"% significance level":i+="Fail to reject null in favor of alternative at "+100*this.alpha+"% significance level",i+="\n"),i};var I=function(){var s,t,e,i,r,n,o,a,l,d,p,m,h,u,g,j,f,c,v,b,w,y,x,E;if(p={},P(arguments[(i=arguments.length)-1])&&(r=arguments[i-1],i-=1,j=G(p,r)))throw j;if(t={},w={},p.groups){if((x=arguments[0]).length!==p.groups.length)throw new RangeError(C("invalid arguments. First argument and `%s` must be arrays of the same length.","opts.groups"));for(w=K(p.groups,A),i=(n=N(w)).length,v=0;v<i;v++)t[f=n[v]]=0;if(i<2)throw new Error(C("invalid number of groups. `%s` array must contain at least two unique elements. Value: `%s`.","groups",n));s=p.groups}else{if(x=[],s=[],i<2)throw new Error(C("invalid number of input arguments. Must provide at least two array-like arguments. Value: `%s`.",g));for(v=0;v<i;v++){if(!M(g=arguments[v]))throw new TypeError(C("invalid argument. Must provide array-like arguments. Value: `%s`.",g));if(0===g.length)throw new Error(C("invalid argument. Supplied arrays cannot be empty. Value: `%s`.",g));for(w[v]=g.length,t[v]=0,b=0;b<w[v];b++)s.push(v),x.push(g[b])}n=B(0,i,1)}if((o=void 0===p.alpha?.05:p.alpha)<0||o>1)throw new RangeError(C("invalid option. `%s` must be a number in the range 0 to 1. Value: `%f`.","alpha",o));for(y=x.length,l=S(x),u={},v=0;v<y;v++)t[s[v]]+=l[v],x[v]in u?u[x[v]]+=1:u[x[v]]=1;for(h=0,v=0;v<i;v++)f=n[v],h+=W(t[f],2)/w[f];for(h=12/(y*(y+1))*h-3*(y+1),e=0,d=N(u),v=0;v<d.length;v++)E=u[d[v]],e+=W(E,3)-E;return h/=1-e/(W(y,3)-y),m=1-z(h,a=i-1),D(c={},"rejected",m<=o),D(c,"alpha",o),D(c,"df",a),D(c,"pValue",m),D(c,"statistic",h),D(c,"method","Kruskal-Wallis Test"),D(c,"print",H),c};export{I as default};
//# sourceMappingURL=index.mjs.map
