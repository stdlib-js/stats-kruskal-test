{"version":3,"file":"index.mjs","sources":["../lib/validate.js","../lib/print.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isArray from '@stdlib/assert-is-array';\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport isnan from '@stdlib/assert-is-nan';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Validates function options.\n*\n* @private\n* @param {Object} opts - destination for validated options\n* @param {Options} options - function options\n* @param {number} [options.alpha] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @returns {(null|Error)} null or an error\n*/\nfunction validate( opts, options ) {\n\tif ( !isObject( options ) ) {\n\t\treturn new TypeError( format( '0fh2h', options ) );\n\t}\n\tif ( hasOwnProp( options, 'alpha' ) ) {\n\t\topts.alpha = options.alpha;\n\t\tif ( !isNumber( opts.alpha ) || isnan( opts.alpha ) ) {\n\t\t\treturn new TypeError( format( '0fh8h', 'alpha', opts.alpha ) );\n\t\t}\n\t}\n\tif ( hasOwnProp( options, 'groups' ) ) {\n\t\topts.groups = options.groups;\n\t\tif ( !isArray( opts.groups ) ) {\n\t\t\treturn new TypeError( format( '0fh8t', 'groups', opts.groups ) );\n\t\t}\n\t}\n\treturn null;\n}\n\n\n// EXPORTS //\n\nexport default validate;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isPositiveInteger from '@stdlib/assert-is-positive-integer';\nimport isObject from '@stdlib/assert-is-plain-object';\nimport { isPrimitive as isBoolean } from '@stdlib/assert-is-boolean';\nimport hasOwnProp from '@stdlib/assert-has-own-property';\nimport roundn from '@stdlib/math-base-special-roundn';\nimport format from '@stdlib/error-tools-fmtprodmsg';\n\n\n// MAIN //\n\n/**\n* Pretty-print output of test.\n*\n* @param {Object} [opts] - options object\n* @param {PositiveInteger} [opts.digits=4] - number of digits after the decimal point\n* @param {boolean} [opts.decision=true] - boolean indicating whether to print the test decision\n* @throws {TypeError} options argument must be an object\n* @throws {TypeError} must provide valid options\n* @returns {string} formatted output\n*/\nfunction print( opts ) { // eslint-disable-line stdlib/no-redeclare\n\t/* eslint-disable no-invalid-this */\n\tvar decision;\n\tvar dgts;\n\tvar str;\n\n\tdgts = 4;\n\tdecision = true;\n\tif ( arguments.length > 0 ) {\n\t\tif ( !isObject( opts ) ) {\n\t\t\tthrow new TypeError( format( '0fh3X', opts ) );\n\t\t}\n\t\tif ( hasOwnProp( opts, 'digits' ) ) {\n\t\t\tif ( !isPositiveInteger( opts.digits ) ) {\n\t\t\t\tthrow new TypeError( format( '0fh3b', 'digits', opts.digits ) );\n\t\t\t}\n\t\t\tdgts = opts.digits;\n\t\t}\n\t\tif ( hasOwnProp( opts, 'decision' ) ) {\n\t\t\tif ( !isBoolean( opts.decision ) ) {\n\t\t\t\tthrow new TypeError( format( '0fh30', 'decision', opts.decision ) );\n\t\t\t}\n\t\t\tdecision = opts.decision;\n\t\t}\n\t}\n\n\tstr = '';\n\tstr += this.method;\n\tstr += '\\n\\n';\n\tstr += 'Null hypothesis: the medians of all groups are the same';\n\tstr += '\\n\\n';\n\tstr += '    pValue: ' + roundn( this.pValue, -dgts ) + '\\n';\n\tstr += '    statistic: ' + roundn( this.statistic, -dgts );\n\tstr += '    df: ' + this.df;\n\tstr += '\\n\\n';\n\tif ( decision ) {\n\t\tstr += 'Test Decision: ';\n\t\tif ( this.rejected ) {\n\t\t\tstr += 'Reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t} else {\n\t\t\tstr += 'Fail to reject null in favor of alternative at ' + (this.alpha*100) + '% significance level';\n\t\t}\n\t\tstr += '\\n';\n\t}\n\treturn str;\n}\n\n\n// EXPORTS //\n\nexport default print;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport isCollection from '@stdlib/assert-is-collection';\nimport isPlainObject from '@stdlib/assert-is-plain-object';\nimport setReadOnly from '@stdlib/utils-define-read-only-property';\nimport countBy from '@stdlib/utils-count-by';\nimport objectKeys from '@stdlib/utils-keys';\nimport rank from '@stdlib/stats-ranks';\nimport pow from '@stdlib/math-base-special-pow';\nimport chisqCDF from '@stdlib/stats-base-dists-chisquare-cdf';\nimport identity from '@stdlib/utils-identity-function';\nimport incrspace from '@stdlib/array-base-incrspace';\nimport format from '@stdlib/error-tools-fmtprodmsg';\nimport validate from './validate.js';\nimport print from './print.js'; // eslint-disable-line stdlib/no-redeclare\n\n\n// MAIN //\n\n/**\n* Computes the Kruskal-Wallis test for equality of medians.\n*\n* @param {...NumberArray} arguments - either two or more number arrays or a single numeric array if an array of group indicators is supplied as an option\n* @param {Options} [options] - function options\n* @param {number} [options.alpha=0.05] - significance level\n* @param {Array} [options.groups] - array of group indicators\n* @throws {Error} must provide at least two array-like arguments if `groups` is not set\n* @throws {TypeError} must provide array-like arguments\n* @throws {TypeError} options must be an object\n* @throws {TypeError} must provide valid options\n* @throws {RangeError} alpha option has to be a number in the interval `[0,1]`\n* @returns {Object} test results\n*\n* @example\n* // Data from Hollander & Wolfe (1973), p. 116:\n* var x = [ 2.9, 3.0, 2.5, 2.6, 3.2 ];\n* var y = [ 3.8, 2.7, 4.0, 2.4 ];\n* var z = [ 2.8, 3.4, 3.7, 2.2, 2.0 ];\n*\n* var out = kruskal( x, y, z );\n* // returns {...}\n*/\nfunction kruskal() {\n\tvar groupsIndicators;\n\tvar groupRankSums;\n\tvar tieSumTerm;\n\tvar ngroups;\n\tvar options;\n\tvar levels;\n\tvar alpha;\n\tvar param;\n\tvar ranks;\n\tvar vals;\n\tvar opts;\n\tvar pval;\n\tvar stat;\n\tvar ties;\n\tvar arg;\n\tvar err;\n\tvar key;\n\tvar out;\n\tvar i;\n\tvar j;\n\tvar n;\n\tvar N;\n\tvar x;\n\tvar v;\n\n\tngroups = arguments.length;\n\topts = {};\n\tif ( isPlainObject( arguments[ ngroups - 1 ] ) ) {\n\t\toptions = arguments[ ngroups - 1 ];\n\t\tngroups -= 1;\n\t\terr = validate( opts, options );\n\t\tif ( err ) {\n\t\t\tthrow err;\n\t\t}\n\t}\n\tgroupRankSums = {};\n\tn = {};\n\tif ( opts.groups ) {\n\t\tx = arguments[ 0 ];\n\t\tif ( x.length !== opts.groups.length ) {\n\t\t\tthrow new RangeError( format( 'invalid arguments. First argument and `%s` must be arrays having the same length.', 'opts.groups' ) );\n\t\t}\n\t\tn = countBy( opts.groups, identity );\n\t\tlevels = objectKeys( n );\n\t\tngroups = levels.length;\n\t\tfor ( i = 0; i < ngroups; i++ ) {\n\t\t\tkey = levels[ i ];\n\t\t\tgroupRankSums[ key ] = 0;\n\t\t}\n\t\tif ( ngroups < 2 ) {\n\t\t\tthrow new Error( format( 'invalid option. `%s` option must be an array containing at least two unique elements. Option: `%s`.', 'groups', levels ) );\n\t\t}\n\t\tgroupsIndicators = opts.groups;\n\t} else {\n\t\tx = [];\n\t\tgroupsIndicators = [];\n\t\tif ( ngroups < 2 ) {\n\t\t\tthrow new Error( format( 'invalid invocation. Incorrect number of arguments. Must provide at least two array-like arguments. Value: `%s`.', arg ) );\n\t\t}\n\t\tfor ( i = 0; i < ngroups; i++ ) {\n\t\t\targ = arguments[ i ];\n\t\t\tif ( !isCollection( arg ) ) {\n\t\t\t\tthrow new TypeError( format( '0fh8q', arg ) );\n\t\t\t}\n\t\t\tif ( arg.length === 0 ) {\n\t\t\t\tthrow new Error( format( '0fh8r', arg ) );\n\t\t\t} else {\n\t\t\t\tn[ i ] = arg.length;\n\t\t\t}\n\t\t\tgroupRankSums[ i ] = 0;\n\t\t\tfor ( j = 0; j < n[ i ]; j++ ) {\n\t\t\t\tgroupsIndicators.push( i );\n\t\t\t\tx.push( arg[ j ] );\n\t\t\t}\n\t\t}\n\t\tlevels = incrspace( 0, ngroups, 1 );\n\t}\n\tif ( opts.alpha === void 0 ) {\n\t\talpha = 0.05;\n\t} else {\n\t\talpha = opts.alpha;\n\t}\n\tif ( alpha < 0.0 || alpha > 1.0 ) {\n\t\tthrow new RangeError( format( 'invalid option. `%s` must be a number on the interval: [0, 1]. Value: `%f`.', 'alpha', alpha ) );\n\t}\n\n\tN = x.length;\n\tranks = rank( x );\n\n\t// Calculate # ties for each value & rank sums per group:\n\tties = {};\n\tfor ( i = 0; i < N; i++ ) {\n\t\tgroupRankSums[ groupsIndicators[ i ] ] += ranks[ i ];\n\t\tif ( x[ i ] in ties ) {\n\t\t\tties[ x[ i ] ] += 1;\n\t\t} else {\n\t\t\tties[ x[ i ] ] = 1;\n\t\t}\n\t}\n\n\t// Calculate test statistic using short-cut formula:\n\tstat = 0.0;\n\tfor ( i = 0; i < ngroups; i++ ) {\n\t\tkey = levels[ i ];\n\t\tstat += pow( groupRankSums[ key ], 2.0 ) / n[ key ];\n\t}\n\tstat = ( ( 12.0 / ( N * (N+1) ) ) * stat ) - ( 3.0 * (N+1) );\n\n\t// Correction for ties:\n\ttieSumTerm = 0;\n\tvals = objectKeys( ties );\n\tfor ( i = 0; i < vals.length; i++ ) {\n\t\tv = ties[ vals[ i ] ];\n\t\ttieSumTerm += pow( v, 3.0 ) - v;\n\t}\n\n\tstat /= 1.0 - ( ( tieSumTerm ) / ( pow( N, 3 ) - N ) );\n\tparam = ngroups - 1;\n\tpval = 1.0 - chisqCDF( stat, param );\n\n\tout = {};\n\tsetReadOnly( out, 'rejected', pval <= alpha );\n\tsetReadOnly( out, 'alpha', alpha );\n\tsetReadOnly( out, 'df', param );\n\tsetReadOnly( out, 'pValue', pval );\n\tsetReadOnly( out, 'statistic', stat );\n\tsetReadOnly( out, 'method', 'Kruskal-Wallis Test' );\n\tsetReadOnly( out, 'print', print );\n\treturn out;\n}\n\n\n// EXPORTS //\n\nexport default kruskal;\n"],"names":["validate","opts","options","isObject","hasOwnProp","alpha","isNumber","isnan","TypeError","format","groups","isArray","print","decision","dgts","str","arguments","length","isPositiveInteger","digits","isBoolean","this","method","roundn","pValue","statistic","df","rejected","kruskal","groupsIndicators","groupRankSums","tieSumTerm","ngroups","levels","param","ranks","vals","pval","stat","ties","arg","err","key","out","i","j","n","N","x","v","isPlainObject","RangeError","countBy","identity","objectKeys","Error","isCollection","push","incrspace","rank","pow","chisqCDF","setReadOnly"],"mappings":"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"}